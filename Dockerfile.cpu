# build: $ docker build -t magnum.af/cpu -f Dockerfile.cpu --build-arg user="$UID" .
# test:  $ docker run --rm -t magnum.af/cpu ./bash/runalltests.sh .
# run:   $ docker run --rm -ti magnum.af/cpu /bin/bash

FROM ubuntu:22.04

RUN apt update && apt install -y gnupg ca-certificates && \
    apt-key adv --fetch-key https://repo.arrayfire.com/GPG-PUB-KEY-ARRAYFIRE-2020.PUB && \
    echo "deb [arch=amd64] https://repo.arrayfire.com/ubuntu all main" | tee /etc/apt/sources.list.d/arrayfire.list && \
    apt update && DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends \
    build-essential \
    git \
    cmake \
    gnuplot \
    libboost-program-options-dev \
    libvtk7-dev \
    libgmock-dev \
    arrayfire-cmake \
    arrayfire-cpu3-dev \
    python3-pip && \
    pip3 install arrayfire numpy

# Setting user from build-arg with 999 as default
ARG user=999
RUN groupadd -g $user magnum.af.user && \
    useradd -r -u $user -g magnum.af.user magnum.af.user && \
    mkdir /home/magnum.af.user && \
    chown -R magnum.af.user /home/magnum.af.user

# Add magnum.af repository
COPY --chown=magnum.af.user . /home/magnum.af/

# building magnum.af and docu
WORKDIR /home/magnum.af/
RUN chmod -R 777 /home/magnum.af/ && \
    (mkdir build && cd build && cmake .. && make -j && ctest -j8 --output-on-failure && make install) && \
    rm -r build/

# set non-root user
USER magnum.af.user

ENV HOME=/home/magnum.af.user/ \
    PYTHONPATH=/usr/local/lib/
